---
interface Props {
  project: {
    project_name: string
    project_slug: string
    columns_names: {
      name: string
      count: number
    }[]
  }
}

const { project } = Astro.props

const COLORS = ["#6678f0", "#1dd8c5", "#3bcf77", "#480a7b", "#921c3e"]
---

<article>
  <header>
    <span
      style={{
        backgroundColor: COLORS[Math.floor(Math.random() * COLORS.length)],
      }}></span>
    <h2>
      <a href={`/project/${project.project_slug}`}> {project.project_name}</a>
    </h2>
  </header>
  <main>
    {
      project.columns_names.map((c) => (
        <div>
          <p>{c.name}</p>
          <p class="count">{c.count}</p>
        </div>
      ))
    }
  </main>
</article>

<style>
  article {
    max-width: 300px;
    width: 90%;
    padding: 30px;
    border-radius: 10px;
    display: grid;
    place-items: center;
    background-color: var(--primary-color);
    color: #000;
    gap: 20px;

    @media screen and (width <= 374px) {
      padding: 30px 20px;
    }

    header {
      width: 100%;
      display: flex;
      gap: 20px;
      align-items: center;
      justify-content: flex-start;

      & > h2 {
        font-size: 20px;
      }

      & > span {
        width: 20px;
        height: 20px;
        border-radius: 5px;
      }
    }

    main {
      width: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-evenly;
      align-items: center;
      gap: 20px;

      & > div {
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-inline: 20px;
        font-weight: 600;

        & > .count {
          color: #555555;
        }
      }
    }
  }
</style>
